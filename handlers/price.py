""" –û–Ω –ø–æ–∫–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω, —Ç.–∫ –æ–Ω –µ—â–µ –Ω–µ —Å–∫–∏–Ω—É–ª –ø—Ä–∞–π—Å —Å–≤–æ–π """

from aiogram import Dispatcher, types


async def price(message: types.Message):
    await message.answer("–ü—Ä–∞–π—Å  \n\n"
                         "¬´–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Å–µ—Å—Å–∏—è¬ª:\n"
                         "  - –ü—Ä–æ–±–Ω–∞—è - 0 —Å–æ–º \n"
                         "  ‚ÅÉ –í—Ç–æ—Ä–∞—è –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ (60-90–º–∏–Ω) - 500—Å–æ–º"
                         "\n\n"
                         "¬´–ü–∞–∫–µ—Ç—ã¬ª\n"
                         "   ‚ÅÉ –ü–∞–∫–µ—Ç ¬´–ë–∞–∑–æ–≤—ã–π¬ª –∏–∑ 4 —Å–µ–∞–Ω—Å–æ–≤ –≤ –º–µ—Å—è—Ü (60-90–º–∏–Ω) - 1500—Å–æ–º\n"
                         "   ‚ÅÉ –ü–∞–∫–µ—Ç ¬´–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π¬ª –∏–∑ 8 —Å–µ–∞–Ω—Å–æ–≤ –≤ –º–µ—Å—è—Ü (60-90–º–∏–Ω) - 3000—Å–æ–º\n\n"
                         "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \n"
                         "üëâ/pay")


def register_price(dp: Dispatcher):
    dp.register_message_handler(price, commands=["–ü—Ä–∞–π—Å", "price"])
