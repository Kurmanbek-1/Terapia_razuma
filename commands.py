from aiogram import Dispatcher, types
from datetime import time


async def on_start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥! \n"
                        "–ó–∞ –±–æ—Ç–æ–º –µ—Å—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥, –Ω–µ –±–æ–π—Ç–µ—Å—å, –≤—Å—ë –∞–Ω–æ–Ω–∏–º–Ω–æ!")



async def about_the_service(message: types.Message):
    await message.answer("–û —Å–µ—Ä–≤–∏—Å–µ:\n\n"
                         "‚ú® –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞—Å –æ—Å–æ–±–µ–Ω–Ω—ã–º–∏? \n"
                         "–ú—ã - –ø–µ—Ä–≤—ã–π —Å–µ—Ä–≤–∏—Å —Ç–∞–∫–æ–≥–æ —Ä–æ–¥–∞ –≤ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ, –∫–æ—Ç–æ—Ä—ã–π —Å–¥–µ–ª–∞–ª –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å "
                         "–¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –≤—Å–µ—Ö. –ú—ã —É–±–µ–∂–¥–µ–Ω—ã, —á—Ç–æ –∫–∞–∂–¥—ã–π –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è, –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è "
                         "—Ä–∞–∑—Ä—É—à–∏—Ç—å —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø—ã, –º–µ—à–∞—é—â–∏–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å.\n\n"
                         "ü´Ç –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–º–∞–Ω–¥–∞ –∂–∏–≤—ã—Ö –∏ –æ–ø—ã—Ç–Ω—ã—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤. –û–Ω–∏ –≤—ã—Å–ª—É—à–∞—é—Ç, "
                         "–ø–æ–º–æ–≥—É—Ç —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è, —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —á—É–≤—Å—Ç–≤–∞–º–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—è—Ç –≤–∞–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. \n"
                         "üíå –ù–µ –∂–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Å–≤–æ–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ–¥–Ω–∏. –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º –≤–∞—à—É –∂–∏–∑–Ω—å –±–æ–ª–µ–µ "
                         "—Å—á–∞—Å—Ç–ª–∏–≤–æ–π –∏ –∑–¥–æ—Ä–æ–≤–æ–π. –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–º–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!")


async def service_rules(message: types.Message):
    await message.answer("–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–∏—Å–∞: \n"
                         "–£–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É —Å–æ–±–µ—Å–µ—Å–µ–¥–Ω–∏–∫—É-–ø—Å–∏—Ö–æ–ª–æ–≥—É\n"
                         "–ù–µ –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è, –Ω–µ –≤—ã—Ä–∞–∂–∞—Ç—å—Å—è")


async def service_support(message: types.Message):
    await message.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏!")


def register_commands(dp: Dispatcher):
    dp.register_message_handler(on_start, commands=["start"])
    dp.register_message_handler(about_the_service, commands=['about'])
    dp.register_message_handler(service_rules, commands=['rules'])
    dp.register_message_handler(service_support, commands=['support'])

